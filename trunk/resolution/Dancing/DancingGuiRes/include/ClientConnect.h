//
//
//  Generated by StarUML(tm) C++ Add-In
//
//  @ Project : Untitled
//  @ File Name : ConnectManager.h
//  @ Date : 2012/12/7
//  @ Author :
//
//


#if !defined(_CONNECTMANAGER_H)
#define _CONNECTMANAGER_H

#include "MessageIdentifiers.h"

#include "RakPeerInterface.h"
#include "RakNetStatistics.h"
#include "RakNetTypes.h"
#include "BitStream.h"
#include "PacketLogger.h"
#include <assert.h>
#include <cstdio>
#include <cstring>
#include <string>
#include <stdlib.h>
#include "RakNetTypes.h"

#include "Kbhit.h"
#include "WindowsIncludes.h" // Sleep
#include "DancingGuiSys.h"
#include "Gets.h"
#include "DancingHouse.h"
#include <iostream>
using namespace std;
unsigned char GetPacketIdentifier(RakNet::Packet *p);
enum CUSTOM_MESSAGE_ID_TYPE//CustomMessageIDType
{
    //DefaultMessageIDTypes结束于129
    CS_GET_HOUSES_LIST = 130,//用于局域网模式客户端向服务器请求房间列表
    SC_GET_HOUSES_LIST ,//用于局域网模式服务器向客户端发送房间列表

    CS_CREATE_HOUSE,//用于局域网模式客户端向服务器请求创建房间
    SC_CREATE_HOUSE,//用于局域网模式服务器向客户端通知新房间创建成功



    CS_LOGOFF_HOUSE,//用于局域网模式客户端向服务器申请退出某房间
    SC_LOGOFF_HOUSE,//用于局域网模式服务器向客户端通知某某退出某房间

    CS_LOGIN_HOUSE,//用于局域网模式客户端向服务器申请加入某房间
    SC_LOGIN_HOUSE_ONE,//用于局域网模式服务器向客户端通知某某加入某房间
    SC_LOGIN_HOUSE_TWO,//
    SC_LOGIN_HOUSE_TO_OTHERONE,//用于局域网模式服务器向房间内另一客户端通知某某加入房间

    //由于房间列表目前是客户端主动请求，故此不必
    //SC_DELETE_HOUSE,//用于局域网模式服务器向客户端通知某房间已经不存在了

    //建议添加一些出错信息的处理 也不必要了，因为类似于房间重名，角色重名，房间位置不够等信息都在客户端进行检测了

    //fux add 客户端需要不停获取房间信息

    //fux add 修改房间参数  或者在客户端每次进入游戏就创建一次房间（大致可行）

};
class ConnectManager
{
    //singleton
    ConnectManager(void);
    ~ConnectManager(void);
    static ConnectManager *instance;
public:
    //singleton
    static ConnectManager *GetInstance();//get the singleton pointer

    void ConfigClient(void); //config sever`s some info
    void StartUpClient(void);//starup the sever

    void Send(string tempstring, string tempstring2 = ""); //use for send message   ,it will appear in a main loop
    void Receive(void);//use for receive message   ,it will appear in a main loop

    void handleHouseList(RakNet::BitStream *);
    void handleNewHouseRequest();
    void handleLoginRequsetOne(RakNet::BitStream *);
    void handleLoginRequsetTwo(RakNet::BitStream *);
    void handleOtherRoleJoin(RakNet::BitStream *);
    void handleOtherRoleLeave();

    DancingGuiSys *mDancingGuiSys;



private:

    RakNet::RakPeerInterface *m_clientPtr;//"raknet"`s kernel object
    RakNet::Packet *m_packetPtr;//

    unsigned char m_packetIdentifier;//the massage`s identify,  联系枚举CUSTOM_MESSAGE_ID_TYPE
    RakNet::SystemAddress m_clientID;//a variable can indentify client

    char m_ip[64], m_serverPort[30], m_clientPort[30];


    string m_message;

    //RakNet::BitStream mBitStream;
    //RakNet::BitStream mEmptyBitStream;
    RakNet::MessageID mTypeId; // This will be assigned to a type I've added after ID_USER_PACKET_ENUM, lets say ID_SET_TIMED_MINE


    DancingHouse *mDancingHouse;
    DancingRole *mRole;
    DancingRole *mOtherRole;
};

#endif  //_CONNECTMANAGER_H
